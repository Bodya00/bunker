from config import TOKEN
import discord
from discord.ext import commands
from generator import *


bot = commands.Bot(command_prefix='!') #–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º '!'

room = {}

@bot.event
async def on_ready():
    print(f'{bot.user.name} has connected to Discord!')

@bot.event
async def on_error(event, *args, **kwargs):
    with open('err.log', 'a') as f:
        if event == 'on_message':
            f.write(f'Unhandled message: {args[0]}\n')
        else:
            raise

@bot.command(name='start', help='–ù–∞—á–∞—Ç—å –Ω–∞–±–æ—Ä –≤ –∏–≥—Ä—É.') #—Ä–∞–∑—Ä–µ—à–∞–µ–º –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∞–≥—Ä—É–º–µ–Ω—Ç—ã
async def start(context): #—Å–æ–∑–¥–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω—Ü–∏—é –±–æ—Ç–∞
    creator = context.author

    isCreatorCan = [ True if r.name == 'Bunker admin' else False for r in creator.guild.roles]
    if not any(isCreatorCan):
        message = await context.send("–¢–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ä–æ–ª—å—é 'Bunker admin' –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏–≥—Ä—ã.")
        return

    room[creator.id] = creator

    response = build_register_message()
    message = await context.send(response)

    await message.add_reaction("‚ò¢Ô∏è")
    await context.message.delete()

@bot.command(name='go', help='–ù–∞—á–∞—Ç—å –∏–≥—Ä—É.') 
async def go(context): #—Å–æ–∑–¥–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω—Ü–∏—é –±–æ—Ç–∞
    creator = context.author
    if creator.id is not list(room.keys())[0]:
        return

    apocalypse = randomize_apocalypse()
    message = await context.send(apocalypse)

    for user_id in room:
        user = bot.get_user(user_id)
        message = '–í–æ—Ç —Ç–≤–æ–∏ —Ö–∞—Ä–∞–µ—Ç–∫—Ä–∏—Å—Ç–∏–∫–∏:\n'
        message += randomize_profile()
        await user.send(message)

    await context.message.delete()

@bot.command(name='finish', help='–ó–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É.') #—Ä–∞–∑—Ä–µ—à–∞–µ–º –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∞–≥—Ä—É–º–µ–Ω—Ç—ã
async def finish(context): #—Å–æ–∑–¥–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω—Ü–∏—é –±–æ—Ç–∞
    global room
    creator = context.author

    if creator.id is not list(room.keys())[0]:
        return

    room = {}

    rawno = '================================================================================================================='
    message = await context.send(rawno)
    message = await context.send("–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞, –≤—Å–µ —É–º–µ—Ä–ª–∏.")
    message = await context.send(rawno)
    # message = await channel.send('hmm‚Ä¶')

    await message.add_reaction("üòÄ")
    await message.add_reaction("‚òπÔ∏è")
    await context.message.delete()

@bot.command(name='newcard', help='–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç—É –¥–ª—è @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.') 
async def newcard(context, *args): #—Å–æ–∑–¥–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω—Ü–∏—é –±–æ—Ç–∞
    creator = context.author
    if creator.id is not list(room.keys())[0]:
        return

    for id_arg in args:
        user_id = int(id_arg.replace('<@!','').replace('>',''))
        if user_id not in list(room.keys()):
            message = await context.send("error, wrong user")

        user = bot.get_user(user_id)
        message = '–í–æ—Ç —Ç–≤–æ—è –Ω–æ–≤–∞—è –∫–∞—Ä—Ç–∞:\n'
        message += randomize_card()
        await user.send(message)
    await context.message.delete()

@bot.command(name='newprofession', help='–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –¥–ª—è @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.') 
async def newprofession(context, *args): #—Å–æ–∑–¥–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω—Ü–∏—é –±–æ—Ç–∞
    creator = context.author
    if creator.id is not list(room.keys())[0]:
        return

    for id_arg in args:
        user_id = int(id_arg.replace('<@!','').replace('>',''))
        if user_id not in list(room.keys()):
            message = await context.send("error, wrong user")

        user = bot.get_user(user_id)
        message = '–í–æ—Ç —Ç–≤–æ—è –Ω–æ–≤–∞—è –ü—Ä–æ—Ñ–µ—Å—Å–∏—è:\n'
        message += randomize_profession()
        await user.send(message)
    await context.message.delete()

@bot.command(name='newbagage', help='–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –±–∞–≥–∞–∂ –¥–ª—è @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.') 
async def newcard(context, *args): #—Å–æ–∑–¥–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω—Ü–∏—é –±–æ—Ç–∞
    creator = context.author
    if creator.id is not list(room.keys())[0]:
        return

    for id_arg in args:
        user_id = int(id_arg.replace('<@!','').replace('>',''))
        if user_id not in list(room.keys()):
            message = await context.send("error, wrong user")

        user = bot.get_user(user_id)
        message = '–í–æ—Ç —Ç–≤–æ–π –±–∞–≥–∞–∂:\n'
        message += randomize_bagage()
        await user.send(message)
    await context.message.delete()

@bot.command(name='newhealth', help='–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–¥–æ—Ä–æ–≤—å—è –¥–ª—è @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.') 
async def newcard(context, *args): #—Å–æ–∑–¥–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω—Ü–∏—é –±–æ—Ç–∞
    creator = context.author
    if creator.id is not list(room.keys())[0]:
        return

    for id_arg in args:
        user_id = int(id_arg.replace('<@!','').replace('>',''))
        if user_id not in list(room.keys()):
            message = await context.send("error, wrong user")

        user = bot.get_user(user_id)
        message = '–í–æ—Ç —Ç–≤–æ–µ –Ω–æ–≤–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ:\n'
        message += randomize_health()
        await user.send(message)

    await context.message.delete()

@bot.command(name='newhobby', help='–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ö–æ–±–±–∏ –¥–ª—è @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.') 
async def newcard(context, *args): #—Å–æ–∑–¥–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω—Ü–∏—é –±–æ—Ç–∞
    creator = context.author
    if creator.id is not list(room.keys())[0]:
        return

    for id_arg in args:
        user_id = int(id_arg.replace('<@!','').replace('>',''))
        if user_id not in list(room.keys()):
            message = await context.send("error, wrong user")

        user = bot.get_user(user_id)
        message = '–í–æ—Ç —Ç–≤–æ—ë –Ω–æ–≤–æ–µ —Ö–æ–±–±–∏:\n'
        message += randomize_hobby()
        await user.send(message)

    await context.message.delete()

@bot.command(name='newbio', help='–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—Ä–æ—Å—Ç–≤–µ—Å –¥–ª—è @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.') 
async def newcard(context, *args): #—Å–æ–∑–¥–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω—Ü–∏—é –±–æ—Ç–∞
    creator = context.author
    if creator.id is not list(room.keys())[0]:
        return

    for id_arg in args:
        user_id = int(id_arg.replace('<@!','').replace('>',''))
        if user_id not in list(room.keys()):
            message = await context.send("error, wrong user")

        user = bot.get_user(user_id)
        message = '–í–æ—Ç —Ç–≤–æ–π –Ω–æ–≤—ã–π –ø–æ–ª—Ä–æ—Å—Ç–≤–µ—Å:\n'
        message += randomize_bio()
        await user.send(message)

    await context.message.delete()

@bot.event
async def on_reaction_add(reaction, user):
    # add user
    #ignore bot reactions
    if user.id == bot.user.id:
        return

    if not user.id in room and reaction.emoji == '‚ò¢Ô∏è':
        room[user.id] = user
        await reaction.message.edit(content=build_register_message())

    # await context.send(reaction.emoji)
    # if reaction.emoji == '\U0001F602':
    #     print("match")

def build_register_message():
    response = "–û–∫, –Ω–∞—á–∏–Ω–∞–µ–º —Ä–∞–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ –≥—Ä—É–ø–ø—É, –≤—Å–µ –∫—Ç–æ —Ö–æ—á–µ—Ç —É—á–∞–≤—Å—Ç–≤–æ–≤–∞—Ç—å, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –±–æ–º–±—É –ø–æ–¥ —ç—Ç–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.\n–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã–µ –ª—é–¥–∏:"
    for user_id in room:
        response+=f'\n{room[user_id].mention}'
    
    response += '\n\n–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É, —Å–æ–∑–¥–∞—Ç–µ–ª—å –∏–≥—Ä—ã –¥–æ–ª–∂–µ–Ω –Ω–∞–ø–∏—Å–∞—Ç—å !go'

    return response

# send tu user
# user = client.get_user(381870129706958858)
# await user.send('üëÄ')

# or
# await message.author.send('üëã')

bot.run(TOKEN)